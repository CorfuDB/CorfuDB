diff a/test/src/test/java/org/corfudb/integration/LogReplicationReaderWriterIT.java b/test/src/test/java/org/corfudb/integration/LogReplicationReaderWriterIT.java	(rejected hunks)
@@ -52,7 +52,6 @@ public class LogReplicationReaderWriterIT extends AbstractIT {
     private static final int NUM_KEYS = 10;
     private static final int NUM_STREAMS = 2;
     public static final int NUM_TRANSACTIONS = 20;
-    public static final String PRIMARY_SITE_ID = "Cluster-Paris";
     public static final int BATCH_SIZE = 2;
 
     // Enforce to read each entry for each message
@@ -292,7 +291,7 @@ public class LogReplicationReaderWriterIT extends AbstractIT {
 
     public static void writeSnapLogMsgs(List<LogReplicationEntryMsg> msgQ, Set<String> streams, CorfuRuntime rt) {
         LogReplicationConfig config = new LogReplicationConfig(streams, BATCH_SIZE, MAX_MSG_SIZE);
-        LogReplicationMetadataManager logReplicationMetadataManager = new LogReplicationMetadataManager(rt, 0, PRIMARY_SITE_ID);
+        LogReplicationMetadataManager logReplicationMetadataManager = new LogReplicationMetadataManager(rt, 0);
         StreamsSnapshotWriter writer = new StreamsSnapshotWriter(rt, config, logReplicationMetadataManager);
 
         if (msgQ.isEmpty()) {
@@ -348,7 +347,7 @@ public class LogReplicationReaderWriterIT extends AbstractIT {
 
     public static void writeLogEntryMsgs(List<LogReplicationEntryMsg> msgQ, Set<String> streams, CorfuRuntime rt) {
         LogReplicationConfig config = new LogReplicationConfig(streams);
-        LogReplicationMetadataManager logReplicationMetadataManager = new LogReplicationMetadataManager(rt, 0, PRIMARY_SITE_ID);
+        LogReplicationMetadataManager logReplicationMetadataManager = new LogReplicationMetadataManager(rt, 0);
         LogEntryWriter writer = new LogEntryWriter(config, logReplicationMetadataManager);
 
         if (msgQ.isEmpty()) {
