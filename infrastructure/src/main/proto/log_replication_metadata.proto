syntax = "proto3";

package org.corfudb.infrastructure.logreplication.proto;

import "corfu_options.proto";
import "google/protobuf/timestamp.proto";

/**
 * This is used by replication metadata table in corfu store.
 * The metadata table has the following key-value pairs defined both as strings:
 * One example to show the standby is at log entry sync state:
 * "topologyConfigId": "0"
 * "version": "release-1.0"
 * "lastSnapshotStarted": "100"
 * "lastSnapshotTransferredSeqNumber": "88"
 * "lastSnapshotTransferred": "100"
 * "lastSnapshotApplied": "100"
 * "lastLogEntryProcessed": "168"
 */
message LogReplicationMetadataKey {
  string key = 1;
}

/**
 * This is corresponding values for the keys in the replication
 * metadata table in corfu store. For example:
 * key: "topologyConfigId", val: "1".
 */
message LogReplicationMetadataVal {
  string val = 1;
}

/*
 * Replication Status Key
 */
 message ReplicationStatusKey {
   string clusterId = 1;
 }

/*
 * Replication Status Value
 * Active Site sets the completionPercent, Standby sets the dataConsistent boolean
 */
message ReplicationStatusVal {
  uint64 remainingEntriesToSend = 1;
  bool dataConsistent = 2;
  enum SyncType {
    SNAPSHOT = 0;
    LOG_ENTRY = 1;
  }
  SyncType syncType = 3;
  SyncStatus status = 4;
  SnapshotSyncInfo snapshotSyncInfo = 5;
}

/*
 * Snapshot Sync Info
 *
 * If replication is in SNAPSHOT sync, this provides details of the
 * ongoing snapshot sync. If replication is in LOG ENTRY sync (delta).
 * this provides details of the previous SNAPSHOT sync leading up to
 * the log entry sync.
 */
message SnapshotSyncInfo {
  enum SnapshotSyncType {
    DEFAULT = 0;
    FORCED = 1;
  }
  SnapshotSyncType type = 1;
  SyncStatus status = 2;
  string snapshotRequestId = 3;
  google.protobuf.Timestamp completedTime = 4;
  uint64 baseSnapshot = 5;
}

/*
 * SyncStatus
 *
 * COMPLETED:   Used in SnapshotSyncInfo only for the latest snapshot sync
 * ERROR:       Log Replication is unrecoverable, need to restart
 * NOT_STARTED: Log Replication might be in the very beginning state
 * STOPPED:     Log Replication is in initialized state
 */
enum SyncStatus {
  ONGOING = 0;
  COMPLETED = 1;
  ERROR = 2;
  NOT_STARTED = 3;
  STOPPED = 4;
  UNAVAILABLE = 5;
}

message ReplicationEventKey {
  string key = 1;
}

message ReplicationEvent {
  option (org.corfudb.runtime.table_schema).stream_tag = "log_replication";

  enum ReplicationEventType {
    FORCE_SNAPSHOT_SYNC = 0;
  }
  string clusterId = 1;
  string eventId = 2;
  ReplicationEventType type = 3;
}