syntax = "proto3";

package org.corfudb.runtime;
option java_package = "org.corfudb.runtime";

message CorfuQueueIdMsg {
    int64 txSequence = 1;
    int64 entryId = 2;
}

message CorfuGuidMsg {
    int64 instanceId = 1;
}

message CorfuQueueMetadataMsg {
    int64 txSequence = 1;
}

enum ReplicationType {
    NONE = 0;
    LOG_ENTRY_SYNC = 1; // This entry was made during a delta sync
    SNAPSHOT_SYNC = 2; // This entry was made during a snapshot sync
    LAST_FULL_SYNC_ENTRY = 3; // Last entry denoting the end marker of a full sync
}

enum OperationType {
    INVALID = 0;
    PUT = 1;
    REMOVE = 2;
}

message DataLocatorMsg {

    // Name of the table that will be modified.
    string tableName = 1;

    // Serialized form of the keys of the table that will be modified.
    bytes key_serialized = 2;
}

// This message forms the value part of the payload used for LogReplication over Routing Queues
message RoutingTableEntryMsg {
    // Source cluster id that is sending messages
    string source_cluster_id = 1;

    // List of unique destinations from topology.
    repeated string destinations = 2;

    // Specify the replication type for routing queue model.
    ReplicationType replication_type = 3;

    // The actual payload carrying data that will be replicated to the destinations specified.
    bytes opaque_payload = 4;

    // Serialized metadata field for certain types
    bytes opaque_metadata = 5;

    // Contains the table name and serialized keys that will be updated of that table
    DataLocatorMsg dataLocator = 6;

    // Operation type that marks the table content is being created or removed.
    OperationType operation_type = 7;
}

message RoutingQSnapStartEndKeyMsg {
    string snapshot_sync_id = 1;
}

// Marker message denoting the end of a snapshot sync
message RoutingQSnapStartEndMarkerMsg {
    // Destination corresponding to this snapshot sync
    string destination = 1;
    int64 snapshot_start_timestamp = 2;
}
