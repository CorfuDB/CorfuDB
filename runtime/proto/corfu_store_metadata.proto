syntax = "proto3";

package org.corfudb.runtime;
option java_package = "org.corfudb.runtime";

import "corfu_options.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/any.proto";

// Logical Timestamp to perform queries and transactions at a particular snapshot.
message Timestamp {
    int64 epoch = 1;
    int64 sequence = 2;
}

// Table name.
message TableName {
    string namespace = 1;
    string table_name = 2;
}

// Describe the protos in a file.
message TableDescriptors {
    // File Descriptor protobufs map.
    // Contains file descriptors of key, value, metadata and their dependencies.
    map<string, google.protobuf.FileDescriptorProto> fileDescriptors = 1;

    // 'Any' representing the key, value and metadata of a table
    google.protobuf.Any key = 2;
    google.protobuf.Any value = 3;
    google.protobuf.Any metadata = 4;
}

// Metadata.
message TableMetadata {
    TableName table_name = 1;

    // True if the CorfuStore is disk based and False if it can be contained in memory.
    bool disk_based = 2;

    // True if these streams are to be cached, False otherwise.
    bool cache = 3;

    // Extract the schema options defined at the table level for easy lookup.
    SchemaOptions table_options = 4;
}

// Record to be persisted containing the value and the metadata.
message Record {
    google.protobuf.Any payload = 1;
    google.protobuf.Any metadata = 2;
}

message ProtobufFileName {
    string file_name = 1;
}

message ProtobufFileDescriptor {
    google.protobuf.FileDescriptorProto file_descriptor = 1;
}