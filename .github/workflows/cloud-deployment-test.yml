name: Cloud Deployment Test

on:
  workflow_dispatch:
  pull_request:

# Cancel Previous Runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cloud_deployment_test:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        jdk_base_image_version: ['openjdk:17-jdk-bullseye']

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'
          check-latest: true
          cache-dependency-path: '**/pom.xml'

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.m2/wrapper/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Docker
        run: |
          for pkg in docker.io docker-ce docker-ce-cli docker-ce-rootless-extras docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh ./get-docker.sh --version 24.0.9
          /usr/bin/docker version
          /usr/bin/docker info

      - name: build docker image
        run: .ci/infrastructure-docker-build.sh docker ${{ matrix.jdk_base_image_version }}

      - uses: actions/checkout@v4
        with:
          repository: 'CorfuDB/corfudb-cloud'
          ref: master

      - name: install helm package manager
        working-directory: ./cloud/corfu
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

          helm repo add jetstack https://charts.jetstack.io
          helm repo update

      - name: Create k3d Cluster
        uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: "corfu"
          args: >-
            --volume /tmp/k3dvol:/tmp/k3dvol
            --agents 2
            --k3s-arg "--no-deploy=traefik,servicelb,metrics-server@server:*"

      - name: install corfu package
        working-directory: ./cloud/corfu
        run: |
          helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.8.0 --set installCRDs=true

          helm install corfu corfu --set persistence.enabled=true --set global.replicas=3 --set image.pullPolicy=IfNotPresent --set image.registry=""

          sleep 120

      - name: check deployment status
        working-directory: ./cloud/corfu
        run: |
          echo check deployment status:
          if kubectl get pods | grep "corfu-0"; then
            echo "Successful deployment!"
            exit 0
          else
            echo "Failed deployment!"

            echo pods:
            kubectl get pods

            echo corfu pod:
            kubectl describe pod corfu-0

            exit 1
          fi
